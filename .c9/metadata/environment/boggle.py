{"filter":false,"title":"boggle.py","tooltip":"/boggle.py","undoManager":{"mark":80,"position":80,"stack":[[{"start":{"row":0,"column":0},"end":{"row":6,"column":32},"action":"insert","lines":["def make_grid(width, height):","    \"\"\"","    Creates a grid that will hold all of the tiles","    for a boggle game","    \"\"\"","    return {(row, col): ' ' for row in range(height)","        for col in range(width)}"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":6,"column":32},"action":"remove","lines":["def make_grid(width, height):","    \"\"\"","    Creates a grid that will hold all of the tiles","    for a boggle game","    \"\"\"","    return {(row, col): ' ' for row in range(height)","        for col in range(width)}"],"id":2},{"start":{"row":0,"column":0},"end":{"row":11,"column":32},"action":"insert","lines":["from string import ascii_uppercase","from random import choice","","","def make_grid(width, height):","    \"\"\"","    Creates a grid that will hold all of the tiles","    for a boggle game","    \"\"\"","    return {(row, col): choice(ascii_uppercase)","        for row in range(height)","        for col in range(width)}"]}],[{"start":{"row":11,"column":32},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":12,"column":0},"end":{"row":12,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":12,"column":8},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":8},"action":"remove","lines":["    "],"id":5},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":13,"column":0},"end":{"row":16,"column":11},"action":"insert","lines":["def test_neighbours_of_a_position(self):","        \"\"\"","        Ensure that a position has 8 neighbours","        \"\"\""],"id":6}],[{"start":{"row":13,"column":0},"end":{"row":16,"column":11},"action":"remove","lines":["def test_neighbours_of_a_position(self):","        \"\"\"","        Ensure that a position has 8 neighbours","        \"\"\""],"id":7},{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["v"]}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"remove","lines":["v"],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["from string import ascii_uppercase","from random import choice","","","def make_grid(width, height):","    \"\"\"","    Creates a grid that will hold all of the tiles","    for a boggle game","    \"\"\"","    return {(row, col): choice(ascii_uppercase)","        for row in range(height)","        for col in range(width)}","        ",""],"id":16},{"start":{"row":0,"column":0},"end":{"row":52,"column":21},"action":"insert","lines":["from string import ascii_uppercase","from random import choice","","","def make_grid(width, height):","    \"\"\"","    Creates a grid that will hold all of the tiles","    for a boggle game","    \"\"\"","    return {(row, col): choice(ascii_uppercase)","        for row in range(height)","        for col in range(width)}","","","def neighbours_of_position(coords):","    \"\"\"","    Get neighbours of a given position","    \"\"\"","    row = coords[0]","    col = coords[1]","","    # Assign each of the neighbours","    # Top-left to top-right","    top_left = (row - 1, col - 1)","    top_center = (row - 1, col)","    top_right = (row - 1, col + 1)","","    # Left to right","    left = (row, col - 1)","    # The `(row, col)` coordinates passed to this","    # function are situated here","    right = (row, col + 1)","","    # Bottom-left to bottom-right","    bottom_left = (row + 1, col -1)","    bottom_center = (row + 1, col)","    bottom_right = (row + 1, col + 1)","","    return [top_left, top_center, top_right,","            left, right,","            bottom_left, bottom_center, bottom_right]","","","def all_grid_neighbours(grid):","    \"\"\"","    Get all of the possible neighbours for each position in","    the grid","    \"\"\"","    neighbours = {}","    for position in grid:","        position_neighbours = neighbours_of_position(position)","        neighbours[position] = [p for p in position_neighbours if p in grid]","    return neighbours"]}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":21},"action":"remove","lines":["from string import ascii_uppercase","from random import choice","","","def make_grid(width, height):","    \"\"\"","    Creates a grid that will hold all of the tiles","    for a boggle game","    \"\"\"","    return {(row, col): choice(ascii_uppercase)","        for row in range(height)","        for col in range(width)}","","","def neighbours_of_position(coords):","    \"\"\"","    Get neighbours of a given position","    \"\"\"","    row = coords[0]","    col = coords[1]","","    # Assign each of the neighbours","    # Top-left to top-right","    top_left = (row - 1, col - 1)","    top_center = (row - 1, col)","    top_right = (row - 1, col + 1)","","    # Left to right","    left = (row, col - 1)","    # The `(row, col)` coordinates passed to this","    # function are situated here","    right = (row, col + 1)","","    # Bottom-left to bottom-right","    bottom_left = (row + 1, col -1)","    bottom_center = (row + 1, col)","    bottom_right = (row + 1, col + 1)","","    return [top_left, top_center, top_right,","            left, right,","            bottom_left, bottom_center, bottom_right]","","","def all_grid_neighbours(grid):","    \"\"\"","    Get all of the possible neighbours for each position in","    the grid","    \"\"\"","    neighbours = {}","    for position in grid:","        position_neighbours = neighbours_of_position(position)","        neighbours[position] = [p for p in position_neighbours if p in grid]","    return neighbours"],"id":17},{"start":{"row":0,"column":0},"end":{"row":115,"column":10},"action":"insert","lines":["#!/usr/bin/env python","import os","from string import ascii_uppercase","from random import choice","","SCRIPT_PATH = os.path.join(os.getcwd(), os.path.dirname(__file__))","","def make_grid(width, height):","    \"\"\"","    Create a grid that will hold all of the tiles for a boggle game","    \"\"\"","    return {(row, col): choice(ascii_uppercase) for row in range(height) for col in range(width)}","    ","def neighbours_of_position(coords):","    \"\"\"","    Get neighbours of a given position","    \"\"\"","    ","    row = coords[0]","    col = coords[1]","    ","    #Assign each of the neighbours","    ","    #Top-left to top-right","    top_left = (row-1, col-1)","    top_center = (row-1, col)","    top_right = (row-1, col+1)","    ","    #Left to right","    left = (row,col-1)","    # The `(row, col)` coordinates passed to this","    # function are situated here","    right = (row,col+1)","","    # Bottom-left to bottom-right","    bottom_left = (row + 1, col - 1)","    bottom_center = (row + 1, col)","    bottom_right = (row + 1, col + 1)","    ","    ","    return [top_left, top_center, top_right,","            left, right,","            bottom_left, bottom_center, bottom_right]","","def all_grid_neighbours(grid):","    \"\"\"","    Get all of the possible neighbours for each position in","    the grid","    \"\"\"","    neighbours = {}","    for position in grid:","        position_neighbours = neighbours_of_position(position)","        neighbours[position] = [p for p in position_neighbours if p in grid]","    return neighbours","    ","def path_to_word(grid, path):","    \"\"\"","    Add all of the letters on the path to a string","    \"\"\"","    return ''.join([grid[p] for p in path])","    ","def search(grid, dictionary):","    \"\"\"","    Search through the paths to locate words by matching strings to words in a dictionary","    \"\"\"","    neighbours = all_grid_neighbours(grid)","    paths = []","    ","    def do_search(path):","        word = path_to_word(grid, path)","        if word in dictionary:","            paths.append(path)","        for next_pos in neighbours[path[-1]]:","            if next_pos not in path:","                do_search(path + [next_pos])","    ","    for position in grid:","        do_search([position])","        ","    words = []","    for path in paths:","        words.append(path_to_word(grid, path))","    return set(words)","","def get_dictionary(dictionary_file):","    \"\"\"","    Load Dictionary file","    \"\"\"","    if not dictionary_file.startswith('/'):","        # if not absolute, then make path relative to our location:","        dictionary_file = os.path.join(SCRIPT_PATH, dictionary_file)","","    with open(dictionary_file) as f:","        return [w.strip().upper() for w in f]","","def display_words(words):","    for word in words:","        print(word)","    print(\"Found %s words\" % len(words))","    ","        ","def main():","    \"\"\"","    This is the function that will run the whole project","    \"\"\"","    grid = make_grid(2, 2)","    \"\"\"","    Here you can change your grid from a 3x3 to a 2x2 to test run times","    \"\"\"","    dictionary = get_dictionary(\"words.txt\")","    words = search(grid, dictionary)","    display_words(words)","","if __name__ == \"__main__\":","    # Code in here will only execution when the file is run directly    ","    main()"]}],[{"start":{"row":10,"column":7},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":["r"],"id":21},{"start":{"row":11,"column":5},"end":{"row":11,"column":6},"action":"insert","lines":["e"]},{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["s"]},{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":["u"]},{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["l"]},{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":[" "],"id":22},{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["="]}],[{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":[" "],"id":23}],[{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":["{"],"id":24},{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":["}"]}],[{"start":{"row":11,"column":15},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":["f"],"id":26},{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"insert","lines":["o"]},{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"insert","lines":["r"]}],[{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":[" "],"id":27}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["e"],"id":28},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["i"]},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":["t"]},{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["s"]}],[{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":[" "],"id":29},{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"insert","lines":["i"]},{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"insert","lines":["n"]}],[{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"insert","lines":[" "],"id":30},{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"insert","lines":["i"]},{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["t"]}],[{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"remove","lines":["t"],"id":31}],[{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["e"],"id":32},{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":["t"]},{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"remove","lines":["s"],"id":33},{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"remove","lines":["t"]},{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"remove","lines":["e"]},{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"remove","lines":["i"]},{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"remove","lines":[" "]},{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"remove","lines":["n"]},{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"remove","lines":["i"]},{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"remove","lines":[" "]}],[{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"remove","lines":["s"],"id":34},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"remove","lines":["t"]},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"remove","lines":["i"]},{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"remove","lines":["e"]},{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"remove","lines":[" "]},{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"remove","lines":["r"]},{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"remove","lines":["o"]},{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"remove","lines":["f"]}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"insert","lines":["p"],"id":35}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"remove","lines":["p"],"id":36}],[{"start":{"row":9,"column":67},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":37},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":10,"column":4},"end":{"row":10,"column":15},"action":"insert","lines":["result = {}"],"id":38}],[{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"remove","lines":["}"],"id":39},{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"remove","lines":["{"]},{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"remove","lines":[" "]},{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"remove","lines":["="]},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"remove","lines":[" "]},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"remove","lines":["t"]}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"remove","lines":["l"],"id":40},{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"remove","lines":["u"]},{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"remove","lines":["s"]},{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"remove","lines":["e"]},{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"remove","lines":["r"]}],[{"start":{"row":10,"column":15},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":41},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]},{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":["f"]}],[{"start":{"row":11,"column":5},"end":{"row":11,"column":6},"action":"insert","lines":["o"],"id":42},{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["r"]}],[{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":[" "],"id":43}],[{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["r"],"id":44},{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["o"]},{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":["w"]}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":[" "],"id":45},{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":["i"]},{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":["n"]}],[{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":[" "],"id":46},{"start":{"row":11,"column":15},"end":{"row":11,"column":16},"action":"insert","lines":["r"]},{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["a"]},{"start":{"row":11,"column":17},"end":{"row":11,"column":18},"action":"insert","lines":["n"]},{"start":{"row":11,"column":18},"end":{"row":11,"column":19},"action":"insert","lines":["g"]},{"start":{"row":11,"column":19},"end":{"row":11,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":11,"column":20},"end":{"row":11,"column":22},"action":"insert","lines":["()"],"id":47}],[{"start":{"row":11,"column":21},"end":{"row":11,"column":22},"action":"insert","lines":["h"],"id":48}],[{"start":{"row":11,"column":21},"end":{"row":11,"column":22},"action":"remove","lines":["h"],"id":49},{"start":{"row":11,"column":21},"end":{"row":11,"column":27},"action":"insert","lines":["height"]}],[{"start":{"row":11,"column":28},"end":{"row":11,"column":29},"action":"insert","lines":[":"],"id":50}],[{"start":{"row":11,"column":29},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":51},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":8},"action":"insert","lines":["    "],"id":52}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["f"],"id":53},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["r"]},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":["o"]}],[{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"remove","lines":["o"],"id":54},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"remove","lines":["r"]}],[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["o"],"id":55},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":["r"]}],[{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":[" "],"id":56},{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["c"]},{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"insert","lines":["o"]},{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"insert","lines":["l"]}],[{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"insert","lines":[" "],"id":57},{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"insert","lines":["i"]},{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["n"]}],[{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":[" "],"id":58},{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["w"]},{"start":{"row":12,"column":20},"end":{"row":12,"column":21},"action":"insert","lines":["i"]}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":21},"action":"remove","lines":["wi"],"id":59},{"start":{"row":12,"column":19},"end":{"row":12,"column":24},"action":"insert","lines":["width"]}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["r"],"id":60},{"start":{"row":12,"column":20},"end":{"row":12,"column":21},"action":"insert","lines":["n"]},{"start":{"row":12,"column":21},"end":{"row":12,"column":22},"action":"insert","lines":["a"]},{"start":{"row":12,"column":22},"end":{"row":12,"column":23},"action":"insert","lines":["g"]}],[{"start":{"row":12,"column":22},"end":{"row":12,"column":23},"action":"remove","lines":["g"],"id":61},{"start":{"row":12,"column":21},"end":{"row":12,"column":22},"action":"remove","lines":["a"]},{"start":{"row":12,"column":20},"end":{"row":12,"column":21},"action":"remove","lines":["n"]}],[{"start":{"row":12,"column":20},"end":{"row":12,"column":21},"action":"insert","lines":["a"],"id":62},{"start":{"row":12,"column":21},"end":{"row":12,"column":22},"action":"insert","lines":["n"]},{"start":{"row":12,"column":22},"end":{"row":12,"column":23},"action":"insert","lines":["g"]},{"start":{"row":12,"column":23},"end":{"row":12,"column":24},"action":"insert","lines":["e"]}],[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"insert","lines":["("],"id":63}],[{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"insert","lines":[")"],"id":64}],[{"start":{"row":12,"column":31},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":65},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"insert","lines":[":"],"id":66}],[{"start":{"row":12,"column":32},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":67},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]},{"start":{"row":13,"column":8},"end":{"row":13,"column":9},"action":"insert","lines":["r"]},{"start":{"row":13,"column":9},"end":{"row":13,"column":10},"action":"insert","lines":["e"]},{"start":{"row":13,"column":10},"end":{"row":13,"column":11},"action":"insert","lines":["s"]}],[{"start":{"row":13,"column":10},"end":{"row":13,"column":11},"action":"remove","lines":["s"],"id":68},{"start":{"row":13,"column":9},"end":{"row":13,"column":10},"action":"remove","lines":["e"]},{"start":{"row":13,"column":8},"end":{"row":13,"column":9},"action":"remove","lines":["r"]}],[{"start":{"row":13,"column":8},"end":{"row":13,"column":12},"action":"insert","lines":["    "],"id":69}],[{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["r"],"id":70},{"start":{"row":13,"column":13},"end":{"row":13,"column":14},"action":"insert","lines":["e"]},{"start":{"row":13,"column":14},"end":{"row":13,"column":15},"action":"insert","lines":["s"]},{"start":{"row":13,"column":15},"end":{"row":13,"column":16},"action":"insert","lines":["u"]},{"start":{"row":13,"column":16},"end":{"row":13,"column":17},"action":"insert","lines":["l"]}],[{"start":{"row":13,"column":17},"end":{"row":13,"column":18},"action":"insert","lines":["t"],"id":71}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"insert","lines":[" "],"id":72}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"remove","lines":[" "],"id":73}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"insert","lines":["="],"id":74}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"remove","lines":["="],"id":75}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"insert","lines":[" "],"id":76}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":20},"action":"insert","lines":["{"],"id":77}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":20},"action":"remove","lines":["{"],"id":78}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":21},"action":"insert","lines":["[]"],"id":79}],[{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["c"],"id":80},{"start":{"row":13,"column":21},"end":{"row":13,"column":22},"action":"insert","lines":["o"]},{"start":{"row":13,"column":22},"end":{"row":13,"column":23},"action":"insert","lines":["l"]}],[{"start":{"row":13,"column":23},"end":{"row":13,"column":24},"action":"insert","lines":[","],"id":81},{"start":{"row":13,"column":24},"end":{"row":13,"column":25},"action":"insert","lines":["r"]},{"start":{"row":13,"column":25},"end":{"row":13,"column":26},"action":"insert","lines":["o"]},{"start":{"row":13,"column":26},"end":{"row":13,"column":27},"action":"insert","lines":["w"]}],[{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["("],"id":82}],[{"start":{"row":13,"column":28},"end":{"row":13,"column":29},"action":"insert","lines":[")"],"id":83}],[{"start":{"row":13,"column":30},"end":{"row":13,"column":31},"action":"insert","lines":["="],"id":84}],[{"start":{"row":13,"column":31},"end":{"row":13,"column":54},"action":"insert","lines":["choice(ascii_uppercase)"],"id":85}],[{"start":{"row":13,"column":54},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":86},{"start":{"row":14,"column":0},"end":{"row":14,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":14,"column":8},"end":{"row":14,"column":12},"action":"remove","lines":["    "],"id":87},{"start":{"row":14,"column":4},"end":{"row":14,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"insert","lines":["r"],"id":88},{"start":{"row":14,"column":5},"end":{"row":14,"column":6},"action":"insert","lines":["e"]},{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"insert","lines":["t"]},{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":["u"]},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"insert","lines":["r"]}],[{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"insert","lines":["n"],"id":89}],[{"start":{"row":14,"column":10},"end":{"row":14,"column":11},"action":"insert","lines":[" "],"id":90},{"start":{"row":14,"column":11},"end":{"row":14,"column":12},"action":"insert","lines":["r"]},{"start":{"row":14,"column":12},"end":{"row":14,"column":13},"action":"insert","lines":["e"]},{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"insert","lines":["s"]},{"start":{"row":14,"column":14},"end":{"row":14,"column":15},"action":"insert","lines":["u"]},{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["l"]},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["t"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1627763175373,"hash":"314aa94441066ed31098fae5a621a2a4ca5d5544"}